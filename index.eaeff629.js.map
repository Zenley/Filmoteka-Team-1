{"mappings":"khBAAAA,SAASC,iBAAiB,oBAAoB,WAC5C,IAAMC,EAAaF,SAASG,eAAe,WACrCC,EAAgBJ,SAASG,eAAe,cAIxCE,EAAaC,KAAKC,KAAKC,KACzBC,EAAc,EA0ElB,SAASC,KAxET,SAAyBC,GAEvB,GADAT,EAAWU,UAAY,GACnBD,EAAO,EAAG,CACZT,EAAWW,MAAMC,QAAU,QAK3B,IAHA,IAAMC,EAVW,GAUGJ,EAAO,GAAoB,EACzCK,EAAWV,KAAKW,IAXL,EAWSN,EAVX,KAYNO,EAAIH,EAAYG,GAAKF,EAAUE,IACtChB,EAAWU,WAAa,WAA+CO,OAApCD,EAAE,oCAAoCC,OAAFD,EAAE,Q,MAG3EhB,EAAWW,MAAMC,QAAU,M,CA6D7BM,CAAgBX,GAzDlB,W,kBA4BI,IAAMY,EAASrB,SAASsB,cAAc,QACtCD,EAAOE,UAAY,cACnBF,EAAOG,YAAcN,EACjBA,IAAMT,GACRY,EAAOI,UAAUC,IAAI,UAEvBL,EAAOpB,iBAAiB,SAAS,WAC/BQ,EAAcS,EACdR,G,IAEFN,EAAcuB,YAAYN,E,EArC5BjB,EAAcQ,UAAY,GAE1B,IAAMgB,EAAY5B,SAASsB,cAAc,QACzCM,EAAUL,UAAY,QACtBK,EAAUJ,YAAc,IACxBI,EAAU3B,iBAAiB,SAAS,WAC9BQ,EAAc,IAChBA,IACAC,I,IAGgB,IAAhBD,GACFmB,EAAUH,UAAUC,IAAI,YAE1BtB,EAAcuB,YAAYC,GAG1B,IACIC,EAAYvB,KAAKwB,IAAI,EAAGrB,EAAcH,KAAKyB,MAAMC,IACjDC,EAAU3B,KAAKW,IAAIZ,EAAYwB,EAFhB,EAEyC,GAGxDI,EAAUJ,EAAY,EALP,IAMjBA,EAAYvB,KAAKwB,IAAI,EAAGG,EANP,EAM8B,IAGjD,IAAK,IAAIC,EAAIL,EAAWK,GAAKD,EAASC,IAAGC,EAAAD,GAczC,IAAME,EAAYpC,SAASsB,cAAc,QACzCc,EAAUb,UAAY,QACtBa,EAAUZ,YAAc,IACxBY,EAAUnC,iBAAiB,SAAS,WAC9BQ,EAAcJ,IAChBI,IACAC,I,IAGAD,IAAgBJ,GAClB+B,EAAUX,UAAUC,IAAI,YAE1BtB,EAAcuB,YAAYS,E,CAK1BC,E,CAGF3B,G","sources":["src/pagination.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\n  const contentDiv = document.getElementById('content');\n  const paginationDiv = document.getElementById('pagination');\n\n  const itemsPerPage = 1; // Number of items per page\n  const totalItems = 300; // Total number of items\n  const totalPages = Math.ceil(totalItems / itemsPerPage); // Total number of pages\n  let currentPage = 1;\n\n  function generateContent(page) {\n    contentDiv.innerHTML = '';\n    if (page > 1) {\n      contentDiv.style.display = 'block'; // Show content if not on the first page\n      // Calculate the start and end index for the current page\n      const startIndex = (page - 1) * itemsPerPage + 1;\n      const endIndex = Math.min(page * itemsPerPage, totalItems);\n\n      for (let i = startIndex; i <= endIndex; i++) {\n        contentDiv.innerHTML += `<p>Item ${i}: This is some content for item ${i}.</p>`;\n      }\n    } else {\n      contentDiv.style.display = 'none'; // Hide content on the first page\n    }\n  }\n\n  function generatePagination() {\n    paginationDiv.innerHTML = '';\n\n    const prevArrow = document.createElement('span');\n    prevArrow.className = 'arrow';\n    prevArrow.textContent = '←';\n    prevArrow.addEventListener('click', function () {\n      if (currentPage > 1) {\n        currentPage--;\n        updatePagination();\n      }\n    });\n    if (currentPage === 1) {\n      prevArrow.classList.add('disabled');\n    }\n    paginationDiv.appendChild(prevArrow);\n\n    // Calculate the page range to show\n    const maxButtons = 4; // Number of page buttons to display initially\n    let startPage = Math.max(1, currentPage - Math.floor(maxButtons / 2));\n    let endPage = Math.min(totalPages, startPage + maxButtons - 1);\n\n    // Adjust startPage if the endPage goes beyond totalPages\n    if (endPage - startPage + 1 < maxButtons) {\n      startPage = Math.max(1, endPage - maxButtons + 1);\n    }\n\n    for (let i = startPage; i <= endPage; i++) {\n      const button = document.createElement('span');\n      button.className = 'page-button';\n      button.textContent = i;\n      if (i === currentPage) {\n        button.classList.add('active');\n      }\n      button.addEventListener('click', function () {\n        currentPage = i;\n        updatePagination();\n      });\n      paginationDiv.appendChild(button);\n    }\n\n    const nextArrow = document.createElement('span');\n    nextArrow.className = 'arrow';\n    nextArrow.textContent = '→';\n    nextArrow.addEventListener('click', function () {\n      if (currentPage < totalPages) {\n        currentPage++;\n        updatePagination();\n      }\n    });\n    if (currentPage === totalPages) {\n      nextArrow.classList.add('disabled');\n    }\n    paginationDiv.appendChild(nextArrow);\n  }\n\n  function updatePagination() {\n    generateContent(currentPage);\n    generatePagination();\n  }\n\n  updatePagination(); // Initial call to setup content and pagination\n});\n"],"names":["document","addEventListener","contentDiv","getElementById","paginationDiv","totalPages","Math","ceil","totalItems","currentPage","updatePagination","page","innerHTML","style","display","startIndex","endIndex","min","i","concat","generateContent","button","createElement","className","textContent","classList","add","appendChild","prevArrow","startPage","max","floor","maxButtons","endPage","i1","_loop","nextArrow","generatePagination"],"version":3,"file":"index.eaeff629.js.map"}