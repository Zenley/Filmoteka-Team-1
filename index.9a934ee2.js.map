{"mappings":"AAAAA,SAASC,iBAAiB,oBAAoB,WAC5C,IAAMC,EAAaF,SAASG,eAAe,WACrCC,EAAgBJ,SAASG,eAAe,cAIxCE,EAAaC,KAAKC,KAAKC,KACzBC,EAAc,EAkGlB,SAASC,KAhGT,SAAyBC,GACvBT,EAAWU,UAAY,GAIvB,IAHA,IAAMC,EAPa,GAOCF,EAAO,GAAoB,EACzCG,EAAWR,KAAKS,IARH,EAQOJ,EAPT,KASRK,EAAIH,EAAYG,GAAKF,EAAUE,IACtCd,EAAWU,WAAa,WAA+CK,OAApCD,EAAE,oCAAoCC,OAAFD,EAAE,Q,CA2F3EE,CAAgBT,GAvFlB,W,kBA2CI,IAAMU,EAASnB,SAASoB,cAAc,QACtCD,EAAOE,UAAY,cACnBF,EAAOG,YAAcN,EACjBA,IAAMP,GACRU,EAAOI,UAAUC,IAAI,UAEvBL,EAAOlB,iBAAiB,SAAS,WAC/BQ,EAAcO,EACdN,G,IAEFN,EAAcqB,YAAYN,E,EApD5Bf,EAAcQ,UAAY,GAG1B,IAAMc,EAAa1B,SAASoB,cAAc,QAC1CM,EAAWL,UAAY,QACvBK,EAAWJ,YAAc,IACzBI,EAAWzB,iBAAiB,SAAS,WAC/BQ,EAAc,IAChBA,EAAc,EACdC,I,IAGgB,IAAhBD,GACFiB,EAAWH,UAAUC,IAAI,YAE3BpB,EAAcqB,YAAYC,GAE1B,IAAMC,EAAY3B,SAASoB,cAAc,QACzCO,EAAUN,UAAY,QACtBM,EAAUL,YAAc,IACxBK,EAAU1B,iBAAiB,SAAS,WAC9BQ,EAAc,IAChBA,IACAC,I,IAGgB,IAAhBD,GACFkB,EAAUJ,UAAUC,IAAI,YAE1BpB,EAAcqB,YAAYE,GAG1B,IACIC,EAAYtB,KAAKuB,IAAI,EAAGpB,EAAcH,KAAKwB,MAAMC,IACjDC,EAAU1B,KAAKS,IAAIV,EAAYuB,EAFhB,EAEyC,GAGxDI,EAAUJ,EAAY,EALP,IAMjBA,EAAYtB,KAAKuB,IAAI,EAAGG,EANP,EAM8B,IAGjD,IAAK,IAAIC,EAAIL,EAAWK,GAAKD,EAASC,IAAGC,EAAAD,GAczC,IAAME,EAAYnC,SAASoB,cAAc,QACzCe,EAAUd,UAAY,QACtBc,EAAUb,YAAc,IACtBa,EAAQlC,iBAAiB,SAAS,WAC9BQ,EAAcJ,IAChBI,IACAC,I,IAGAD,IAAgBJ,GAClB8B,EAAUZ,UAAUC,IAAI,YAE1BpB,EAAcqB,YAAYU,GAG1B,IAAMC,EAAYpC,SAASoB,cAAc,QACzCgB,EAAUf,UAAY,QACtBe,EAAUd,YAAc,IACxBc,EAAUnC,iBAAiB,SAAS,WAC9BQ,EAAcJ,IAChBI,EAAcJ,EACdK,I,IAGAD,IAAgBJ,GAClB+B,EAAUb,UAAUC,IAAI,YAE1BpB,EAAcqB,YAAYW,E,CAK1BC,E,CAGF3B,G","sources":["src/js/pagination.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\n  const contentDiv = document.getElementById('content');\n  const paginationDiv = document.getElementById('pagination');\n\n  const itemsPerPage = 1; // Number of items per page\n  const totalItems = 300; // Total number of items\n  const totalPages = Math.ceil(totalItems / itemsPerPage); // Total number of pages\n  let currentPage = 1;\n\n  function generateContent(page) {\n    contentDiv.innerHTML = '';\n    const startIndex = (page - 1) * itemsPerPage + 1;\n    const endIndex = Math.min(page * itemsPerPage, totalItems);\n\n    for (let i = startIndex; i <= endIndex; i++) {\n      contentDiv.innerHTML += `<p>Item ${i}: This is some content for item ${i}.</p>`;\n    }\n  }\n\n  function generatePagination() {\n    paginationDiv.innerHTML = '';\n\n    // Add \"first page\" double arrow\n    const firstArrow = document.createElement('span');\n    firstArrow.className = 'arrow';\n    firstArrow.textContent = '«';\n    firstArrow.addEventListener('click', function () {\n      if (currentPage > 1) {\n        currentPage = 1;\n        updatePagination();\n      }\n    });\n    if (currentPage === 1) {\n      firstArrow.classList.add('disabled');\n    }\n    paginationDiv.appendChild(firstArrow);\n\n    const prevArrow = document.createElement('span');\n    prevArrow.className = 'arrow';\n    prevArrow.textContent = '←';\n    prevArrow.addEventListener('click', function () {\n      if (currentPage > 1) {\n        currentPage--;\n        updatePagination();\n      }\n    });\n    if (currentPage === 1) {\n      prevArrow.classList.add('disabled');\n    }\n    paginationDiv.appendChild(prevArrow);\n\n    // Calculate the page range to show\n    const maxButtons = 4; // Number of page buttons to display initially\n    let startPage = Math.max(1, currentPage - Math.floor(maxButtons / 2));\n    let endPage = Math.min(totalPages, startPage + maxButtons - 1);\n\n    // Adjust startPage if the endPage goes beyond totalPages\n    if (endPage - startPage + 1 < maxButtons) {\n      startPage = Math.max(1, endPage - maxButtons + 1);\n    }\n\n    for (let i = startPage; i <= endPage; i++) {\n      const button = document.createElement('span');\n      button.className = 'page-button';\n      button.textContent = i;\n      if (i === currentPage) {\n        button.classList.add('active');\n      }\n      button.addEventListener('click', function () {\n        currentPage = i;\n        updatePagination();\n      });\n      paginationDiv.appendChild(button);\n    }\n\n    const nextArrow = document.createElement('span');\n    nextArrow.className = 'arrow';\n    nextArrow.textContent = '→';\n    nextArrow.addEventListener('click', function () {\n      if (currentPage < totalPages) {\n        currentPage++;\n        updatePagination();\n      }\n    });\n    if (currentPage === totalPages) {\n      nextArrow.classList.add('disabled');\n    }\n    paginationDiv.appendChild(nextArrow);\n\n    // Add \"last page\" double arrow\n    const lastArrow = document.createElement('span');\n    lastArrow.className = 'arrow';\n    lastArrow.textContent = '»';\n    lastArrow.addEventListener('click', function () {\n      if (currentPage < totalPages) {\n        currentPage = totalPages;\n        updatePagination();\n      }\n    });\n    if (currentPage === totalPages) {\n      lastArrow.classList.add('disabled');\n    }\n    paginationDiv.appendChild(lastArrow);\n  }\n\n  function updatePagination() {\n    generateContent(currentPage);\n    generatePagination();\n  }\n\n  updatePagination(); // Initial call to setup content and pagination\n});\n"],"names":["document","addEventListener","contentDiv","getElementById","paginationDiv","totalPages","Math","ceil","totalItems","currentPage","updatePagination","page","innerHTML","startIndex","endIndex","min","i","concat","generateContent","button","createElement","className","textContent","classList","add","appendChild","firstArrow","prevArrow","startPage","max","floor","maxButtons","endPage","i1","_loop","nextArrow","lastArrow","generatePagination"],"version":3,"file":"index.9a934ee2.js.map"}